
add_namespace = uberreichspicy


add_namespace = uberreichrussiandoom

country_event = { #
	id = uberreichrussiandoom.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichrussiandoom.1" }
	title = uberreichrussiandoom.1.t
	desc = uberreichrussiandoom.1.d
	fire_only_once = yes
	trigger = {
		tag = RUS
		has_war_with = UBR
		surrender_progress > 0.50
		UBR = { has_country_leader = { ruling_only = yes name = "Josef Goebbels" } }
		OR = {
			UBR = {
				controls_state = 195
			}
			any_other_country = {
				is_subject_of = UBR
				controls_state = 195
			}
		}
		OR = {
			UBR = {
				controls_state = 205
			}
			any_other_country = {
				is_subject_of = UBR
				controls_state = 205
			}
		}
		OR = {
			UBR = {
				controls_state = 263
			}
			any_other_country = {
				is_subject_of = UBR
				controls_state = 263
			}
		}
		OR = {
			UBR = {
				controls_state = 217
			}
			any_other_country = {
				is_subject_of = UBR
				controls_state = 217
			}
		}
	}
	hidden = yes
	immediate = {
		###Muscovy
		if = {
			limit = {
				219 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 219
			}
			219 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				247 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 247
			}
			247 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				248 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 248
			}
			248 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				252 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 252
			}
			252 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				253 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 253
			}
			253 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				254 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 254
			}
			254 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				264 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 264
			}
			264 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				351 = { is_owned_by = RUS }
			}
			RRY = {
				transfer_state = 351
			}
			351 = { 
				add_core_of = RRY
			}
		}
		###Kazan
		TTR = {
			load_focus_tree = generic_focus
			set_politics = {
				ruling_party = syndicalist
				last_election = "1936.1.1"
				election_frequency = 48
				elections_allowed = no
			}
			set_party_name = { ideology = syndicalist long_name = "Tatarskaya Sotsialisticheskaya Sovetskaya Partiya" name = "TSSP"}
			set_popularities = {
				syndicalist = 100
			}

			create_country_leader = {
				name = "Musa Jalil"
				desc = "POLITICS_some russian_DESC"
				picture = "gfx/leaders/TTR/Portrait_TTR_Musa_Jalil.png"
				expire = "1965.1.1"
				ideology = syndicalist_subtype
			}
			
			set_cosmetic_tag = TTR_KAZAN

		}
		if = {
			limit = {
				1199 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 1199
			}
			1199 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				1193 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 1193
			}
			1193 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				1204 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 1204
			}
			1204 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				1203 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 1203
			}
			1203 = { 
				add_core_of = TTR
			}
		}
		
		if = {
			limit = {
				1198 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 1198
			}
			1198 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				1197 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 1197
			}
			1197 = { 
				add_core_of = TTR
			}
		}
		
		if = {
			limit = {
				1205 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 1205
			}
			1205 = { 
				add_core_of = TTR
			}
		}
		
		if = {
			limit = {
				249 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 249
			}
			249 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				256 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 256
			}
			256 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				251 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 251
			}
			251 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				250 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 250
			}
			250 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				399 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 399
			}
			399 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				400 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 400
			}
			400 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				255 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 255
			}
			255 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				257 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 257
			}
			257 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				239 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 239
			}
			239 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				401 = { is_owned_by = RUS }
			}
			TTR = {
				transfer_state = 401
			}
			401 = { 
				add_core_of = TTR
			}
		}
		##Komi-Nenet
		RRF = {
			set_politics = {
				ruling_party = social_conservative
				last_election = "1936.1.1"
				election_frequency = 48
				elections_allowed = no
			}
			set_party_name = { ideology = social_conservative long_name = "Partiya Nezavisimix Narodov" name = "PNN"}
			set_popularities = {
				social_conservative = 100
			}

			create_country_leader = {
				name = "Pitirim Sorokin"
				desc = "POLITICS_some russian_DESC"
				picture = "gfx/leaders/RRZ/Pitirim_Sorokin.png"
				expire = "1965.1.1"
				ideology = social_conservative_subtype
			}
			
			set_cosmetic_tag = RRF_KOMI
		}

		if = {
			limit = {
				397 = { is_owned_by = RUS }
			}
			RRF = {
				transfer_state = 397
			}
			397 = { 
				add_core_of = RRF
			}
		}
		if = {
			limit = {
				214 = { is_owned_by = RUS }
			}
			RRF = {
				transfer_state = 214
			}
			214 = { 
				add_core_of = RRF
			}
		}
		if = {
			limit = {
				262 = { is_owned_by = RUS }
			}
			RRF = {
				transfer_state = 262
			}
			262 = { 
				add_core_of = RRF
			}
		}
		if = {
			limit = {
				581 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 581
			}
			581 = { 
				add_core_of = RVA
			}
		}
		
		
		if = {
			limit = {
				1196 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 1196
			}
			1196 = { 
				add_core_of = RVA
			}
		}
		
		if = {
			limit = {
				1195 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 1195
			}
			1195 = { 
				add_core_of = RVA
			}
		}
		
		if = {
			limit = {
				1194 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 1194
			}
			1194 = { 
				add_core_of = RVA
			}
		}
		
		if = {
			limit = {
				516 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 516
			}
			516 = { 
				add_core_of = RRV
			}
		}
		
		
		if = {
			limit = {
				1196 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 1196
			}
			1196 = { 
				add_core_of = RVA
			}
		}
		
		if = {
			limit = {
				1195 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 1195
			}
			1195 = { 
				add_core_of = RVA
			}
		}
		
		if = {
			limit = {
				1201 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 1201
			}
			1201 = { 
				add_core_of = RRV
			}
		}
		
		###Urals
		if = {
			limit = {
				653 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 653
			}
			653 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				572 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 572
			}
			572 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				403 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 403
			}
			403 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				580 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 580
			}
			580 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				573 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 573
			}
			573 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				582 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 582
			}
			582 = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				398 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 398
			}
			398 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				651 = { is_owned_by = RUS }
			}
			RVA = {
				transfer_state = 651
			}
			651 = { 
				add_core_of = RVA
			}
		}
		###Novosibirsk
		if = {
			limit = {
				570 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 570
			}
			570 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				571 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 571
			}
			571 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				569 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 569
			}
			569 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				578 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 578
			}
			578 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				577 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 577
			}
			577 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				1200 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 1200
			}
			1200 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				576 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 576
			}
			576 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				568 = { is_owned_by = RUS }
			}
			RRV = {
				transfer_state = 568
			}
			568 = { 
				add_core_of = RRV
			}
		}
		###finland
		if = {
			limit = {
				840 = { is_owned_by = RUS }
			}
			release = FIN
		}
		if = {
			limit = {
				146 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 146 
			}
			146  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				147 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 147 
			}
			147  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				213 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 213 
			}
			213 = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				215 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 215 
			}
			215  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				216 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 216 
			}
			216  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				722 = { is_owned_by = RUS }
			}
			FIN = {
				transfer_state = 722 
			}
			722  = { 
				add_core_of = FIN
			}
		}
		####Alash Orda
		if = {
			limit = {
				589 = { is_owned_by = RUS }
			}
			release = ALO
		}
		if = {
			limit = {
				40 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 40 
			}
			40  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				652 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 652 
			}
			652  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				583 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 583 
			}
			583  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				590 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 590 
			}
			590  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				588 = { is_owned_by = RUS }
			}
			ALO = {
				transfer_state = 588 
			}
			588  = { 
				add_core_of = ALO
			}
		}
		ALO = { set_cosmetic_tag = ALO_KAZACH }
		###turkmenistan
		if = {
			limit = {
				405 = { is_owned_by = RUS }
			}
			release = TRK
		}
		if = {
			limit = {
				861 = { is_owned_by = RUS }
			}
			release = UZB
		}
		if = {
			limit = {
				586 = { is_owned_by = RUS }
			}
			release = KYR
		}
		###mongols
		if = {
			limit = {
				330 = { is_owned_by = RUS }
			}
			set_temp_variable = { tag_to_release = MON }
			release_targeted_tag = yes
			end_puppet = MON
		}
		if = {
			limit = {
				329 = { is_owned_by = RUS }
			}
			MON = {
				transfer_state = 329 
			}
			329  = { 
				add_core_of = MON
			}
		}
		if = {
			limit = {
				654 = { is_owned_by = RUS }
			}
			MON = {
				transfer_state = 654 
			}
			654  = { 
				add_core_of = MON
			}
		}
		if = {
			limit = {
				811 = { is_owned_by = RUS }
			}
			MON = {
				transfer_state = 811 
			}
			811  = { 
				add_core_of = MON
			}
		}
		###Transamur
		if = {
			limit = {
				408 = { is_owned_by = RUS }
			}
			release = TRM
		}
		if = {
			limit = {
				644 = { is_owned_by = RUS }
			}
			TRM = {
				transfer_state = 644 
			}
			644  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				575 = { is_owned_by = RUS }
			}
			TRM = {
				transfer_state = 575 
			}
			575  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				566 = { is_owned_by = RUS }
			}
			TRM = {
				transfer_state = 566 
			}
			566  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				567 = { is_owned_by = RUS }
			}
			TRM = {
				transfer_state = 567 
			}
			567  = { 
				add_core_of = TRM
			}
		}
		country_event = { id =  uberreichrussiandoom.3  }
	}
}

country_event = { #
	id = uberreichrussiandoom.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichrussiandoom.2" }
	title = uberreichrussiandoom.2.t
	desc = uberreichrussiandoom.2.d
	fire_only_once = yes
	trigger = {
		tag = SOV
		has_war_with = UBR
		surrender_progress > 0.50
		UBR = { has_country_leader = { ruling_only = yes name = "Josef Goebbels" } }
		OR = {
			UBR = {
				controls_state = 195
			}
			any_other_country = {
				is_subject_of = UBR
				controls_state = 195
			}
		}
		OR = {
			UBR = {
				controls_state = 205
			}
			any_other_country = {
				is_subject_of = UBR
				controls_state = 205
			}
		}
		OR = {
			UBR = {
				controls_state = 263
			}
			any_other_country = {
				is_subject_of = UBR
				controls_state = 263
			}
		}
		OR = {
			UBR = {
				controls_state = 217
			}
			any_other_country = {
				is_subject_of = UBR
				controls_state = 217
			}
		}
	}
	hidden = yes
	immediate = {
		setup_muscovy = yes
		###Muscovy
		if = {
			limit = {
				219 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 219
			}
			219 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				247 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 247
			}
			247 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				248 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 248
			}
			248 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				252 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 252
			}
			252 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				253 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 253
			}
			253 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				254 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 254
			}
			254 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				264 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 264
			}
			264 = { 
				add_core_of = RRY
			}
		}
		if = {
			limit = {
				351 = { is_owned_by = SOV }
			}
			RRY = {
				transfer_state = 351
			}
			351 = { 
				add_core_of = RRY
			}
		}
		###Kazan
		
		if = {
			limit = {
				1199 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 1199
			}
			1199 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				1193 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 1193
			}
			1193 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				1204 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 1204
			}
			1204 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				1203 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 1203
			}
			1203 = { 
				add_core_of = TTR
			}
		}
		
		if = {
			limit = {
				1198 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 1198
			}
			1198 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				1197 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 1197
			}
			1197 = { 
				add_core_of = TTR
			}
		}
		
		if = {
			limit = {
				1205 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 1205
			}
			1205 = { 
				add_core_of = TTR
			}
		}
		
		if = {
			limit = {
				249 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 249
			}
			249 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				256 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 256
			}
			256 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				251 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 251
			}
			251 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				250 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 250
			}
			250 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				399 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 399
			}
			399 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				400 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 400
			}
			400 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				255 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 255
			}
			255 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				257 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 257
			}
			257 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				239 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 239
			}
			239 = { 
				add_core_of = TTR
			}
		}
		if = {
			limit = {
				401 = { is_owned_by = SOV }
			}
			TTR = {
				transfer_state = 401
			}
			401 = { 
				add_core_of = TTR
			}
		}
		##Komi-Nenet
		if = {
			limit = {
				397 = { is_owned_by = SOV }
			}
			RRF = {
				transfer_state = 397
			}
			397 = { 
				add_core_of = RRF
			}
		}
		if = {
			limit = {
				214 = { is_owned_by = SOV }
			}
			RRF = {
				transfer_state = 214
			}
			214 = { 
				add_core_of = RRF
			}
		}
		if = {
			limit = {
				262 = { is_owned_by = SOV }
			}
			RRF = {
				transfer_state = 262
			}
			262 = { 
				add_core_of = RRF
			}
		}
		if = {
			limit = {
				581 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 581
			}
			581 = { 
				add_core_of = RVA
			}
		}
		
		if = {
			limit = {
				1196 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 1196
			}
			1196 = { 
				add_core_of = RVA
			}
		}
		
		if = {
			limit = {
				1195 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 1195
			}
			1195 = { 
				add_core_of = RVA
			}
		}
		
		if = {
			limit = {
				1194 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 1194
			}
			1194 = { 
				add_core_of = RVA
			}
		}
		
		### Novosibirsk ###
		setup_novosibirsk = yes
		if = {
			limit = {
				516 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 516
			}
			516 = { 
				add_core_of = RRV
			}
		}
		
		if = {
			limit = {
				1201 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 1201
			}
			1201 = { 
				add_core_of = RRV
			}
		}
		###Urals
		RVA = {
			set_politics = {
				ruling_party = paternal_autocrat
				last_election = "1936.1.1"
				election_frequency = 48
				elections_allowed = no
			}
			set_party_name = { ideology = paternal_autocrat long_name = "Dinastiya Kulikovski" name = "Dinastiya Kulikovski"}
			set_popularities = {
				paternal_autocrat = 100
			}

			create_country_leader = {
				name = "Nikolay I"
				desc = "POLITICS_some russian_DESC"
				picture = "gfx/leaders/RRU/Nikolay_Aleksandrovich_Kulikovski.png"
				expire = "1965.1.1"
				ideology = absolute_monarchy_subtype
			}
			set_cosmetic_tag = RVA_TSAR
		}

		if = {
			limit = {
				653 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 653
			}
			653 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				572 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 572
			}
			572 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				403 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 403
			}
			403 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				580 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 580
			}
			580 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				573 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 573
			}
			573 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				582 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 582
			}
			582 = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				398 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 398
			}
			398 = { 
				add_core_of = RVA
			}
		}
		if = {
			limit = {
				651 = { is_owned_by = SOV }
			}
			RVA = {
				transfer_state = 651
			}
			651 = { 
				add_core_of = RVA
			}
		}
		###Novosibirsk
		if = {
			limit = {
				570 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 570
			}
			570 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				571 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 571
			}
			571 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				569 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 569
			}
			569 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				578 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 578
			}
			578 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				577 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 577
			}
			577 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				1200 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 1200
			}
			1200 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				576 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 576
			}
			576 = { 
				add_core_of = RRV
			}
		}
		if = {
			limit = {
				568 = { is_owned_by = SOV }
			}
			RRV = {
				transfer_state = 568
			}
			568 = { 
				add_core_of = RRV
			}
		}
		###finland
		if = {
			limit = {
				840 = { is_owned_by = SOV }
			}
			release = FIN
		}
		if = {
			limit = {
				146 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 146 
			}
			146  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				147 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 147 
			}
			147  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				213 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 213 
			}
			213 = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				215 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 215 
			}
			215  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				216 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 216 
			}
			216  = { 
				add_core_of = FIN
			}
		}
		if = {
			limit = {
				722 = { is_owned_by = SOV }
			}
			FIN = {
				transfer_state = 722 
			}
			722  = { 
				add_core_of = FIN
			}
		}
		####Alash Orda
		if = {
			limit = {
				589 = { is_owned_by = SOV }
			}
			release = ALO 
		}
		if = {
			limit = {
				40 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 40 
			}
			40  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				652 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 652 
			}
			652  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				583 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 583 
			}
			583  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				590 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 590 
			}
			590  = { 
				add_core_of = ALO
			}
		}
		if = {
			limit = {
				588 = { is_owned_by = SOV }
			}
			ALO = {
				transfer_state = 588 
			}
			588  = { 
				add_core_of = ALO
			}
		}
		ALO = { set_cosmetic_tag = ALO_KAZACH }
		###turkmenistan
		if = {
			limit = {
				405 = { is_owned_by = SOV }
			}
			release = TRK
		}
		if = {
			limit = {
				861 = { is_owned_by = SOV }
			}
			release = UZB
		}
		if = {
			limit = {
				586 = { is_owned_by = SOV }
			}
			release = KYR
		}
		###mongols
		if = {
			limit = {
				330 = { is_owned_by = SOV }
			}
			set_temp_variable = { tag_to_release = MON }
			release_targeted_tag = yes
			end_puppet = MON
		}
		if = {
			limit = {
				329 = { is_owned_by = SOV }
			}
			MON = {
				transfer_state = 329 
			}
			329  = { 
				add_core_of = MON
			}
		}
		if = {
			limit = {
				654 = { is_owned_by = SOV }
			}
			MON = {
				transfer_state = 654 
			}
			654  = { 
				add_core_of = MON
			}
		}
		if = {
			limit = {
				811 = { is_owned_by = SOV }
			}
			MON = {
				transfer_state = 811 
			}
			811  = { 
				add_core_of = MON
			}
		}
		###Transamur
		if = {
			limit = {
				408 = { is_owned_by = SOV }
			}
			release = TRM
		}
		if = {
			limit = {
				644 = { is_owned_by = SOV }
			}
			TRM = {
				transfer_state = 644 
			}
			644  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				575 = { is_owned_by = SOV }
			}
			TRM = {
				transfer_state = 575 
			}
			575  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				566 = { is_owned_by = SOV }
			}
			TRM = {
				transfer_state = 566 
			}
			566  = { 
				add_core_of = TRM
			}
		}
		if = {
			limit = {
				567 = { is_owned_by = SOV }
			}
			TRM = {
				transfer_state = 567 
			}
			567  = { 
				add_core_of = TRM
			}
		}
		
		country_event = { id =  uberreichrussiandoom.3  }
	}
}
news_event = { #
	id = uberreichrussiandoom.3
	major = yes 
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichrussiandoom.3" }
	fire_only_once = yes
	title = uberreichrussiandoom.3.t
	desc = uberreichrussiandoom.3.d
	picture = GFX_news_event_capture_moscow
	is_triggered_only = yes 
	option = {
		name = uberreichrussiandoom.3.a
	}
}

add_namespace = uberreichmisc

country_event = { # SYNTHWAVE
	id = uberreichmisc.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.1" }
	title = uberreichmisc.1.t
	desc = uberreichmisc.1.d
	picture = GFX_report_event_nightcore
	is_triggered_only = yes
	
	option = { # SYNTHWAVE yes
		name = uberreichmisc.1.a
		add_ideas = UBR_NIGHTCORE
	}
	option = { # SYNTHWAVE no
		name = uberreichmisc.1.b
		add_manpower = -1
	}
}
country_event = { # portraitswapper
	id = uberreichmisc.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2" }
	title = uberreichmisc.2.t
	desc = uberreichmisc.2.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
					create_country_leader = {
							name = "Josef Goebbels"
							desc = "UBR_GOEBBELS_DESC"
							picture = "gfx/leaders/UBR/Portrait_UBR_Josef_Goebbels_14.png"
							expire = "1965.1.1"
							ideology = germanic_socialism_subtype
							traits = {
								UBR_froncophobe
							}
					}
					if = {	
						limit = { has_country_leader = { name = "Josef Goebbels" ruling_only = yes } }
						set_country_leader_portrait = {
							portrait = "gfx/leaders/UBR/Portrait_UBR_Josef_Goebbels_14.png"
						}
					}
					create_country_leader = {
							name = "Josef Goebbels"
							desc = "UBR_GOEBBELS_DESC"
							picture = "gfx/leaders/UBR/Portrait_UBR_Josef_Goebbels_14.png"
							expire = "1965.1.1"
							ideology = national_populist_subtype
							traits = {
								UBR_froncophobe
								UBR_volksfuehrer
							}
					}
	}
}

country_event = { # portraitswapper
	id = uberreichmisc.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.3" }
	title = uberreichmisc.3.t
	desc = uberreichmisc.3.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	create_country_leader = {
							name = "Communal Councils"
							desc = "UBR_Councils_DESC"
							picture = "gfx/leaders/UBR/councilism.png"
							expire = "1965.1.1"
							ideology = anarcho_syndicalist_subtype
				}
	}
}


country_event = { # Futhark
	id = uberreichmisc.4
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.4" }
	title = uberreichmisc.4.t
	desc = uberreichmisc.4.d
	picture = GFX_report_event_futhark
	is_triggered_only = yes
	
	option = { 
		name = uberreichmisc.4.a
		add_ideas = UBR_FUTHARK
	}
}


country_event = { # Blank Canvas
	id = uberreichmisc.5
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.5" }
	title = uberreichmisc.5.t
	desc = uberreichmisc.5.d
	picture = GFX_report_event_trueartisthis
	is_triggered_only = yes
	
	option = { 
		name = uberreichmisc.5.a
	}
}

country_event = { # Susi
	id = uberreichmisc.6
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.6" }
	title = uberreichmisc.6.t
	desc = uberreichmisc.6.d
	picture = GFX_report_event_blondi_dog
	is_triggered_only = yes
	
	option = { 
		name = uberreichmisc.6.a
	}
}

country_event = { # Liebknecht retires
	id = uberreichmisc.7
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.7" }
	title = uberreichmisc.7.t
	desc = uberreichmisc.7.d
	picture = GFX_report_event_Liebknecht_rente
	is_triggered_only = yes
	fire_only_once = yes
	
	option = { 
		name = uberreichmisc.7.a
		set_country_flag = UBR_LIEBKNECHT_RETIRED
	}
}


country_event = { # DAF
	id = uberreichmisc.8
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.8" }
	title = uberreichmisc.8.t
	desc = uberreichmisc.8.d
	picture = GFX_report_event_DAF
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.8.a
	}
}

country_event = { # VW
	id = uberreichmisc.9
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.9" }
	title = uberreichmisc.9.t
	desc = uberreichmisc.9.d
	picture = GFX_report_event_VW
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.9.a
	}
}

country_event = { # VE
	id = uberreichmisc.10
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.10" }
	title = uberreichmisc.10.t
	desc = uberreichmisc.10.d
	picture = GFX_report_event_VE
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.10.a
	}
}

country_event = { # VF
	id = uberreichmisc.11
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.11" }
	title = uberreichmisc.11.t
	desc = uberreichmisc.11.d
	picture = GFX_report_event_VF
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.11.a
	}
}

country_event = { # KDF
	id = uberreichmisc.12
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.12" }
	title = uberreichmisc.12.t
	desc = uberreichmisc.12.d
	picture = GFX_report_event_KDF
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.12.a
	}
}

country_event = { # SDA
	id = uberreichmisc.13
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.13" }
	title = uberreichmisc.13.t
	desc = uberreichmisc.13.d
	picture = GFX_report_event_SDA
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.13.a
	}
}

country_event = { # VG
	id = uberreichmisc.14
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.14" }
	title = uberreichmisc.14.t
	desc = uberreichmisc.14.d
	picture = GFX_report_event_VG
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.14.a
	}
}

country_event = { # Men among Men
	id = uberreichmisc.15
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.15" }
	title = uberreichmisc.15.t
	desc = uberreichmisc.15.d
	picture = GFX_report_event_MAM
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.15.a
	}
}

country_event = { # bruh not cool
	id = uberreichmisc.16
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.16" }
	title = uberreichmisc.16.t
	desc = uberreichmisc.16.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.16.a
	}
}

country_event = { # Pieck Secret Police
	id = uberreichmisc.17
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.17" }
	title = uberreichmisc.17.t
	desc = uberreichmisc.17.d
	picture = GFX_report_event_PIECK_STATUE
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.17.a
	}
}

country_event = { # Pieck ugly houses
	id = uberreichmisc.18
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.18" }
	title = uberreichmisc.18.t
	desc = uberreichmisc.18.d
	picture = GFX_report_event_ugly_houses
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.18.a
	}
}

country_event = { # Pieck speed run trail
	id = uberreichmisc.19
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.19" }
	title = uberreichmisc.19.t
	desc = uberreichmisc.19.d
	picture = GFX_report_event_speed_run_purge
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.19.a
	}
}

country_event = { # day in munich
	id = uberreichmisc.20
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.20" }
	title = uberreichmisc.20.t
	desc = uberreichmisc.20.d
	picture = GFX_report_event_rudi
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.20.a
	}
}

country_event = { # A New Curriculum
	id = uberreichmisc.21
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.21" }
	title = uberreichmisc.21.t
	desc = uberreichmisc.21.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.21.a
	}
}

country_event = { # Love is Love
	id = uberreichmisc.22
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.22" }
	title = uberreichmisc.22.t
	desc = uberreichmisc.22.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.22.a
	}
}

country_event = { # The Vanguard of the Working Class
	id = uberreichmisc.23
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.23" }
	title = uberreichmisc.23.t
	desc = uberreichmisc.23.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.23.a
	}
}

country_event = { # Pogge quotas
	id = uberreichmisc.24
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.24" }
	title = uberreichmisc.24.t
	desc = uberreichmisc.24.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.24.a
	}
}

country_event = { # Gestapo
	id = uberreichmisc.25
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.25" }
	title = uberreichmisc.25.t
	desc = uberreichmisc.25.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.25.a
	}
}

country_event = { # Cultural Revolution
	id = uberreichmisc.26
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.26" }
	title = uberreichmisc.26.t
	desc = uberreichmisc.26.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.26.a
	}
}

country_event = { # The Last Laugh
	id = uberreichmisc.27
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.27" }
	title = uberreichmisc.27.t
	desc = uberreichmisc.27.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.27.a
	}
}

country_event = { # The Suffrage of the Other Sex
	id = uberreichmisc.28
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.28" }
	title = uberreichmisc.28.t
	desc = uberreichmisc.28.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.28.a
	}
}

country_event = { # The Stalking Woods
	id = uberreichmisc.29
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.29" }
	title = uberreichmisc.29.t
	desc = uberreichmisc.29.d
	picture = GFX_report_event_GOTHI
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.29.a
	}
}
country_event = { # All to the Chairman 
	id = uberreichmisc.30
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.30" }
	title = uberreichmisc.30.t
	desc = uberreichmisc.30.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.30.a
	}
}
country_event = { # The Dark Red Constitution Part I
	id = uberreichmisc.31
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.31" }
	title = uberreichmisc.31.t
	desc = uberreichmisc.31.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.31.a
		country_event = { id =  uberreichmisc.32 }
	}
}
country_event = { # The Dark Red Constitution Part II
	id = uberreichmisc.32
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.32" }
	title = uberreichmisc.32.t
	desc = uberreichmisc.32.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.32.a
		country_event = { id =  uberreichmisc.33 }
	}
}
country_event = { # The Finishing Touches
	id = uberreichmisc.33
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.33" }
	title = uberreichmisc.33.t
	desc = uberreichmisc.33.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.33.a
	}
}

country_event = { # The Bright Red Constitution Part I
	id = uberreichmisc.34
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.34" }
	title = uberreichmisc.34.t
	desc = uberreichmisc.34.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.34.a
		country_event = { id =  uberreichmisc.35 }
	}
}

country_event = { # The Bright Red Constitution Part II
	id = uberreichmisc.35
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.35" }
	title = uberreichmisc.35.t
	desc = uberreichmisc.35.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.35.a
		country_event = { id =  uberreichmisc.36 }
	}
}

country_event = { # The Finishing Touches
	id = uberreichmisc.36
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.36" }
	title = uberreichmisc.36.t
	desc = uberreichmisc.36.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.36.a
	}
}

country_event = { # Führerprinzip
	id = uberreichmisc.37
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.37" }
	title = uberreichmisc.37.t
	desc = uberreichmisc.37.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.37.a
			create_field_marshal = {
				name = "Adolf Hitler"
				portrait_path = "gfx/leaders/UBR/Portrait_UBR_Adolf_Hitler.dds"
				traits = { FUHRERS_COMMAND politically_connected war_hero }
				skill = 4

				attack_skill = 3
				defense_skill = 2
				planning_skill = 4
				logistics_skill = 3
				}
	}

	option = { 
		name = uberreichmisc.37.b
		swap_ideas = {
			remove_idea = UBR_Rudolf_Hess_hog_npo
			add_idea = UBR_Adolf_Hitler_hog_npo
		}
	}
}



country_event = { # The Doctors of the Revolution
	id = uberreichmisc.38
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.38" }
	title = uberreichmisc.38.t
	desc = uberreichmisc.38.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.38.a
	}
}

country_event = { # The New German Cinema
	id = uberreichmisc.39
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.39" }
	title = uberreichmisc.39.t
	desc = uberreichmisc.39.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.39.a
	}
}

country_event = { # A Germanic Epic
	id = uberreichmisc.1040
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.1040" }
	title = uberreichmisc.1040.t
	desc = uberreichmisc.1040.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.1040.a
		hidden_effect = {
			country_event = { id =  uberreichmisc.1041 }
		}
	}
}

country_event = { # A Night at the Theatre
	id = uberreichmisc.1041
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.1041" }
	title = uberreichmisc.1041.t
	desc = uberreichmisc.1041.d
	picture = GFX_report_event_SEINKAMPF
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.1041.a
	}
}


country_event = { # Germania Start
	id = uberreichmisc.2000
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2000" }
	title = uberreichmisc.2000.t
	desc = uberreichmisc.2000.d
	picture = GFX_report_event_GERMANIA
	is_triggered_only = yes
	option = { #berlin
		name = uberreichmisc.2000.a
		set_country_flag = Germania_berlin
		hidden_effect = {
			country_event = { id =  uberreichmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
	option = { #Imursil PAderborn
		name = uberreichmisc.2000.b
		set_country_flag = Germania_imursil
		hidden_effect = {
			country_event = { id =  uberreichmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
	option = { # between wilhelmshaven and hamburg
		name = uberreichmisc.2000.c
		set_country_flag = Germania_north_sea
		hidden_effect = {
			country_event = { id =  uberreichmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
	option = { #pommerania
		name = uberreichmisc.2000.e
		set_country_flag = Germania_pommerania
		hidden_effect = {
			country_event = { id =  uberreichmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
	option = { #heart of germany
		name = uberreichmisc.2000.f
		set_country_flag = Germania_franconia
		hidden_effect = {
			country_event = { id =  uberreichmisc.2001 days = 200 }
			add_ideas = BUILDING_GERMANIA
		}
	}
}

country_event = { # Germania city rings
	id = uberreichmisc.2001
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2001" }
	title = uberreichmisc.2001.t
	desc = uberreichmisc.2001.d
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.2001.a
		hidden_effect = {
			country_event = { id =  uberreichmisc.2002 days = 120 }
		}
	}
}

country_event = { # Germania Arc
	id = uberreichmisc.2002
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2002" }
	title = uberreichmisc.2002.t
	desc = uberreichmisc.2002.d
	picture = GFX_report_event_TRIUMPHARC
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.2002.a
		hidden_effect = {
			country_event = { id =  uberreichmisc.2003 days = 140 }
		}
	}
}

country_event = { # Germania Hermann
	id = uberreichmisc.2003
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2003" }
	title = uberreichmisc.2003.t
	desc = uberreichmisc.2003.d
	picture = GFX_report_event_HERMANN
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.2003.a
		hidden_effect = {
			country_event = { id =  uberreichmisc.2004 days = 100 }
		}
	}
}

country_event = { # Germania Stadtbahn
	id = uberreichmisc.2004
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2004" }
	title = uberreichmisc.2004.t
	desc = uberreichmisc.2004.d
	picture = GFX_report_event_BAHN
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.2004.a
		hidden_effect = {
			country_event = { id =  uberreichmisc.2005 days = 120 }
		}
	}
}

country_event = { # Germania Lufthafen
	id = uberreichmisc.2005
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2005" }
	title = uberreichmisc.2005.t
	desc = uberreichmisc.2005.d
	picture = GFX_report_event_LUFTHAFEN
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.2005.a
		hidden_effect = {
			if = {
				limit = {
					OR = {
						UBR = { has_country_flag = Germania_north_sea }
						UBR = { has_country_flag = Germania_pommerania }
					}
				}
				country_event = { id =  uberreichmisc.2006 days = 80 }
			}
			else = {
				country_event = { id =  uberreichmisc.2007 days = 120 }
			}
		}
	}
}

country_event = { # Germania harbor
	id = uberreichmisc.2006
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2006" }
	title = uberreichmisc.2006.t
	desc = uberreichmisc.2006.d
	picture = GFX_report_event_GERMANIHAFEN
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.2006.a
		hidden_effect = {
			country_event = { id =  uberreichmisc.2007 days = 100 }
		}
	}
}

country_event = { # Germania stadium
	id = uberreichmisc.2007
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2007" }
	title = uberreichmisc.2007.t
	desc = uberreichmisc.2007.d
	picture = GFX_report_event_GERMANIASTADIUM
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.2007.a
		hidden_effect = {
			country_event = { id =  uberreichmisc.2008 days = 125 }
		}
	}
}

country_event = { # Germania Hero hall
	id = uberreichmisc.2008
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2008" }
	title = uberreichmisc.2008.t
	desc = uberreichmisc.2008.d
	picture = GFX_report_event_HEROHALL
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.2008.a
		hidden_effect = {
			country_event = { id =  uberreichmisc.2009 days = 100 }
		}
	}
}

country_event = { # Germania Volkshalle
	id = uberreichmisc.2009
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2009" }
	title = uberreichmisc.2009.t
	desc = uberreichmisc.2009.d
	picture = GFX_report_event_volkshalle
	is_triggered_only = yes
	option = { 
		name = uberreichmisc.2009.a
		hidden_effect = {
			country_event = { id =  uberreichmisc.2010 days = 70 }
		}
	}
}

country_event = { # Germania finished
	id = uberreichmisc.2010
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.2010" }
	title = uberreichmisc.2010.t
	desc = uberreichmisc.2010.d
	picture = GFX_report_event_GERMANIAFINISHED
	is_triggered_only = yes
	option = { #
		name = uberreichmisc.2010.a
		remove_ideas = BUILDING_GERMANIA
		add_ideas = GERMANIA_STADT
	hidden_effect = {
	set_country_flag = UBR_GERMANIA_FINISHED
	country_event = { id =  uberreichmisc.1002 days = 5 }
	if = {
			limit = {
			UBR = { has_country_flag = Germania_berlin }
			}
		add_victory_points = {
				province = 6521
				value = 50
			}		
		set_province_name = { id = 6521 name = "Festungsstadt Germania"}
		64 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 11431
					level = 10
					instant_build = yes
			}
		}
	}
	if = {
			limit = {
			UBR = { has_country_flag = Germania_imursil }
			}
		add_victory_points = {
				province = 11431
				value = 100
			}		
		set_province_name = { id = 11431 name = "Festungsstadt Germania"}
		57 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 11431
					level = 10
					instant_build = yes
				}
		}
		set_capital = { state = 57 }
	}
	if = {
			limit = {
			UBR = { has_country_flag = Germania_north_sea }
			}
		add_victory_points = {
				province = 374
				value = 100
			}		
		set_province_name = { id = 374 name = "Festungsstadt Germania"}
		59 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 374
					level = 10
					instant_build = yes
				}
			add_building_construction = {
					type = naval_base
					province = 374
					level = 10
					instant_build = yes
				}
			add_building_construction = {
					type = coastal_bunker
					province = 374
					level = 10
					instant_build = yes
				}
		}
		set_capital = { state = 59 }
	}
	if = {
			limit = {
			UBR = { has_country_flag = Germania_pommerania }
			}
		add_victory_points = {
				province = 11343
				value = 100
			}		
		set_province_name = { id = 11343 name = "Festungsstadt Germania"}
		63 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 11343
					level = 10
					instant_build = yes
				}
			add_building_construction = {
					type = naval_base
					province = 11343
					level = 10
					instant_build = yes
				}
			add_building_construction = {
					type = coastal_bunker
					province = 11343
					level = 10
					instant_build = yes
				}
		}
		set_capital = { state = 63 }
	}
	if = {
			limit = {
			UBR = { has_country_flag = Germania_franconia }
			}
		add_victory_points = {
				province = 3474
				value = 100
			}		
		set_province_name = { id = 3474 name = "Festungsstadt Germania"}
		54 = {
			add_building_construction = {
				type = infrastructure
				level = 8
				instant_build = yes
			}
			add_building_construction = {
				type = air_base
				level = 20
				instant_build = yes
			}
			add_building_construction = {
				type = anti_air_building
				level = 10
				instant_build = yes
			}
			add_building_construction = {
				type = radar_station
				level = 10
				instant_build = yes
			}
			add_building_construction = {
					type = bunker
					province = 3474
					level = 10
					instant_build = yes
				}
		}
		set_capital = { state = 54 }
	}
	}
	}
}


country_event = { # allignment
	id = uberreichmisc.40
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.40" }
	title = uberreichmisc.40.t
	desc = uberreichmisc.40.d
	is_triggered_only = yes
	
	option = { # join germany
		name = uberreichmisc.40.a
		ai_chance = {
			factor = 90
		}
		UBR = {
		add_to_faction = ROOT
		}
	}
	option = { # fuck germany
		name = uberreichmisc.40.b
		ai_chance = {
			factor = 10
		}
		add_opinion_modifier = {
			target = UBR
			modifier = ITA_dislikes_govt
		}
	}
}

country_event = { # country now leaves the french
	id = uberreichmisc.50
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.50" }
	title = uberreichmisc.50.t
	desc = uberreichmisc.50.d
	is_triggered_only = yes
	
	option = { # fuck france
		name = uberreichmisc.50.a
		ai_chance = {
			factor = 40
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
		if = {
			limit = {
				is_in_faction_with = FRA
			}
			leave_faction = yes
		}
		if = {
			limit = {
				is_subject = no
				has_war_with = UBR
			}
			separate_peace_all_wars = yes
		}
	}
	option = { # fuck germany
		name = uberreichmisc.50.b
		ai_chance = {
			factor = 60
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
		add_opinion_modifier = {
			target = UBR
			modifier = ITA_dislikes_govt
		}
	}
}

country_event = { # war against france for french puppet
	id = uberreichmisc.60
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.60" }
	title = uberreichmisc.60.t
	desc = uberreichmisc.60.d
	is_triggered_only = yes
	
	option = { # fuck france
		name = uberreichmisc.60.a
		ai_chance = {
			factor = 40
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
		if = {
			limit = {
				is_in_faction_with = FRA
			}
			leave_faction = yes
			FRA = { end_puppet = ROOT }
			ROOT = {
				declare_war_on = {
					target = FRA
					type = annex_everything
				}
			}
		}
		if = {
			limit = {
				is_subject = no
				has_war_with = UBR
			}
			separate_peace_all_wars = yes
		}
	}
	option = { # fuck germany
		name = uberreichmisc.60.b
		ai_chance = {
			factor = 60
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
		add_opinion_modifier = {
			target = UBR
			modifier = ITA_dislikes_govt
		}
	}
}

country_event = { # preasure on Deat
	id = uberreichmisc.70
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.70" }
	title = uberreichmisc.70.t
	desc = uberreichmisc.70.d
	is_triggered_only = yes
	
	option = { # 
		name = uberreichmisc.70.a
		ai_chance = {
			factor = 20
			modifier = {
				factor = 100
				num_faction_members < 2
			}
			modifier = {
				factor = 0
				num_faction_members > 4
			}
		}
		UBR = {
		add_to_faction = ROOT
		}
		UBR = {
			hidden_effect = {
				country_event = {
				id = uberreichmisc.80
				days = 2
				}
			}
		}
	}
	option = { # 
		name = uberreichmisc.70.b
		ai_chance = {
			factor = 80
			modifier = {
				factor = 0
				num_faction_members < 2
			}
			modifier = {
				factor = 100
				num_faction_members > 4
			}
		}
		add_opinion_modifier = {
			target = UBR
			modifier = ITA_dislikes_govt
		}
		UBR = {
			hidden_effect = {
				country_event = {
				id = uberreichmisc.90
				days = 2
				}
			}
		}
	}
}

country_event = { # Deat gives in
	id = uberreichmisc.80
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.80" }
	title = uberreichmisc.80.t
	desc = uberreichmisc.80.d
	is_triggered_only = yes
	
	option = {
		name = uberreichmisc.80.a
		FRA = {
			every_owned_state = {
				limit = {
					OR = {
						state = 8
						state = 28
						state = 42
						state = 741
						state = 779
						state = 781
					}
				}
				ROOT = { transfer_state = PREV }
			}
		}
	}
}

country_event = { # Deat refuses
	id = uberreichmisc.90
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.90" }
	title = uberreichmisc.90.t
	desc = uberreichmisc.90.d
	is_triggered_only = yes
	
	option = { # 
		name = uberreichmisc.90.a
		ai_chance = {
			factor = 80
		}
		declare_war_on = {
			target = FRA
			type = annex_everything
		}
		28 = {
			add_claim_by = UBR
			}
		779 = {
			add_claim_by = UBR
			}
	}
	
	option = { # 
		name = uberreichmisc.90.b
		ai_chance = {
			factor = 20
		}

		add_political_power = -200
	}
}

country_event = { # allignment
	id = uberreichmisc.100
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.100" }
	title = uberreichmisc.100.t
	desc = uberreichmisc.100.d
	is_triggered_only = yes
	
	option = { # join germany
		name = uberreichmisc.100.a
		ai_chance = {
			factor = 80
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
		UBR = {
		add_to_faction = ROOT
		}
	}
	option = { # fuck germany
		name = uberreichmisc.100.b
		ai_chance = {
			factor = 20
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
		add_opinion_modifier = {
			target = UBR
			modifier = ITA_dislikes_govt
		}
		UBR = {
			hidden_effect = {
				country_event = {
				id = uberreichmisc.110
				days = 2
				}
			}
		}
	}
}

country_event = {
	id = uberreichmisc.110
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.110" }
	title = uberreichmisc.110.t
	desc = uberreichmisc.110.d
	is_triggered_only = yes
	
	option = { # 
		name = uberreichmisc.110.a
		ai_chance = {
			factor = 80
		}
		declare_war_on = {
			target = FROM
			type = annex_everything
		}
	}
	
	option = { # 
		name = uberreichmisc.110.b
		ai_chance = {
			factor = 20
		}

		add_political_power = -200
	}
}




country_event = { # VKR claims
	id = uberreichmisc.200
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.200" }
	title = uberreichmisc.200.t
	desc = uberreichmisc.200.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
				202 = {
					add_claim_by = VKR
				}
				241 = {
					add_claim_by = VKR
				}
				997 = {
					add_claim_by = VKR
				}
				93 = {
					add_claim_by = VKR
				}	
				792 = {
					add_claim_by = VKR
				}
				95 = {
					add_claim_by = VKR
				}
				194 = {
					add_claim_by = VKR
				}
				201 = {
					add_claim_by = VKR
				}
				199 = {
					add_claim_by = VKR
				}
				198 = {
					add_claim_by = VKR
				}
				791 = {
					add_claim_by = VKR
				}
				78 = {
					add_claim_by = VKR
				}
				192 = {
					add_claim_by = VKR
				}
				202 = {
					add_claim_by = VKR
				}
				203 = {
					add_claim_by = VKR
				}
				197 = {
					add_claim_by = VKR
				}
				196 = {
					add_claim_by = VKR
				}
				137 = {
					add_claim_by = VKR
				}
				193 = {
					add_claim_by = VKR
				}
				259 = {
					add_claim_by = VKR
				}
				226 = {
					add_claim_by = VKR
				}
				200 = {
					add_claim_by = VKR
				}
				224 = {
					add_claim_by = VKR
				}
				225 = {
					add_claim_by = VKR
				}		
				220 = {
					add_claim_by = VKR
				}
				221 = {
					add_claim_by = VKR
				}
				222 = {
					add_claim_by = VKR
				}
				223 = {
					add_claim_by = VKR
				}
				258 = {
					add_claim_by = VKR
				}
				260 = {
					add_claim_by = VKR
				}
				265 = {
					add_claim_by = VKR
				}
				245 = {
					add_claim_by = VKR
				}
				218 = {
					add_claim_by = VKR
				}
				228 = {
					add_claim_by = VKR
				}
				240 = {
					add_claim_by = VKR
				}
				227 = {
					add_claim_by = VKR
				}
				1237 = {
					add_claim_by = VKR
				}
				1243 = {
					add_claim_by = VKR
				}
				1242 = {
					add_claim_by = VKR
				}
				1230 = {
					add_claim_by = VKR
				}
				79 = {
					add_claim_by = VKR
				}
				713 = {
					add_claim_by = VKR
				}
				80 = {
					add_claim_by = VKR
				}
				1228 = {
					add_claim_by = VKR
				}
				1244 = {
					add_claim_by = VKR
				}
				1244 = {
					add_claim_by = VKR
				}
				1245 = {
					add_claim_by = VKR
				}
				1241 = {
					add_claim_by = VKR
				}
				1240 = {
					add_claim_by = VKR
				}
				1237 = {
					add_claim_by = VKR
				}
				1230 = {
					add_claim_by = VKR
				}
				1242 = {
					add_claim_by = VKR
				}
				1243 = {
					add_claim_by = VKR
				}
				1238 = {
					add_claim_by = VKR
				}
				1233 = {
					add_claim_by = VKR
				}
				1232 = {
					add_claim_by = VKR
				}
				1221 = {
					add_claim_by = VKR
				}
				1234 = {
					add_claim_by = VKR
				}
				228 = {
					add_claim_by = VKR
				}
				821 = {
					add_claim_by = VKR
				}
				1239 = {
					add_claim_by = VKR
				}
				227 = {
					add_claim_by = VKR
				}
	}
}

country_event = { # VKR OIL KIEV
	id = uberreichmisc.201
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.201" }
	title = uberreichmisc.201.t
	desc = uberreichmisc.201.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
	give_resource_rights = { receiver = UBR state = 202 }
	}
	}
}

country_event = { # VKR OIL
	id = uberreichmisc.202
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.202" }
	title = uberreichmisc.202.t
	desc = uberreichmisc.202.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
	give_resource_rights = { receiver = UBR state = 226 }
	}
	}
}

country_event = { # VKR OIL
	id = uberreichmisc.203
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.203" }
	title = uberreichmisc.203.t
	desc = uberreichmisc.203.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
	hidden_effect = {
	give_resource_rights = { receiver = UBR state = 221 }
	}
	}
}

country_event = { # VKK claims
	id = uberreichmisc.300
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.300" }
	title = uberreichmisc.300.t
	desc = uberreichmisc.300.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
				990 = {
					add_claim_by = VKK
				}
				229 = {
					add_claim_by = VKK
				}
				998 = {
					add_claim_by = VKK
				}	
				230 = {
					add_claim_by = VKK
				}
				231 = {
					add_claim_by = VKK
				}
				1082 = {
					add_claim_by = VKK
				}
				1080 = {
					add_claim_by = VKK
				}
				232 = {
					add_claim_by = VKK
				}
				787 = {
					add_claim_by = VKK
				}
				233 = {
					add_claim_by = VKK
				}
				234 = {
					add_claim_by = VKK
				}
				235 = {
					add_claim_by = VKK
				}
				787 = {
					add_claim_by = VKK
				}
				237 = {
					add_claim_by = VKK
				}
				238 = {
					add_claim_by = VKK
				}
				236 = {
					add_claim_by = VKK
				}
				217 = {
					add_claim_by = VKK
				}
				1190 = {
					add_claim_by = VKK
				}
				1189 = {
					add_claim_by = VKK
				}
				1186 = {
					add_claim_by = VKK
				}
				1187 = {
					add_claim_by = VKK
				}
				1188 = {
					add_claim_by = VKK
				}
				1191 = {
					add_claim_by = VKK
				}
				
				
				
				1001 = {
					add_claim_by = VKK
				}
				1000 = {
					add_claim_by = VKK
				}
				355 = {
					add_claim_by = VKK
				}
				354 = {
					add_claim_by = VKK
				}
				352 = {
					add_claim_by = VKK
				}
				417 = {
					add_claim_by = VKK
				}
				419 = {
					add_claim_by = VKK
				}
				420 = {
					add_claim_by = VKK
				}
				1227 = {
					add_claim_by = VKK
				}
				1226 = {
					add_claim_by = VKK
				}
	}
}

country_event = { # VKK OIL BAKU
	id = uberreichmisc.301
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.301" }
	title = uberreichmisc.301.t
	desc = uberreichmisc.301.d
	is_triggered_only = yes
	hidden = yes
	immediate = { hidden_effect = { give_resource_rights = { receiver = UBR state = 990 } } }
}

country_event = { # VKK OIL AZE
	id = uberreichmisc.302
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.302" }
	title = uberreichmisc.302.t
	desc = uberreichmisc.302.d
	is_triggered_only = yes
	hidden = yes
	immediate = { hidden_effect = { give_resource_rights = { receiver = UBR state = 229 } } }
}

country_event = { # VKK OIL AZE
	id = uberreichmisc.303
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.303" }
	title = uberreichmisc.303.t
	desc = uberreichmisc.303.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
		hidden_effect = {
			give_resource_rights = { receiver = UBR state = 232 }
			give_resource_rights = { receiver = UBR state = 787 }
			give_resource_rights = { receiver = UBR state = 233 }
		}
	}
}
country_event = { # VKK OIL AZE
	id = uberreichmisc.304
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.304" }
	title = uberreichmisc.304.t
	desc = uberreichmisc.304.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
		hidden_effect = {
			give_resource_rights = { receiver = UBR state = 234 }
			give_resource_rights = { receiver = UBR state = 235 }
		}
	}
}

country_event = { # VKB claims
	id = uberreichmisc.400
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.400" }
	title = uberreichmisc.400.t
	desc = uberreichmisc.400.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
		11 = { add_claim_by = VKB }
		12 = { add_claim_by = VKB }
		13 = { add_claim_by = VKB }
		94 = { add_claim_by = VKB }
		96 = { add_claim_by = VKB }
		189 = { add_claim_by = VKB }
		190 = { add_claim_by = VKB }
		191 = { add_claim_by = VKB }
		195 = { add_claim_by = VKB }
		204 = { add_claim_by = VKB }
		205 = { add_claim_by = VKB }
		206 = { add_claim_by = VKB }
		207 = { add_claim_by = VKB }
		208 = { add_claim_by = VKB }
		209 = { add_claim_by = VKB }
		210 = { add_claim_by = VKB }
		242 = { add_claim_by = VKB }
		243 = { add_claim_by = VKB }
		244 = { add_claim_by = VKB }
		246 = { add_claim_by = VKB }
		263 = { add_claim_by = VKB }
		755 = { add_claim_by = VKB }
		880 = { add_claim_by = VKB }
		1087 = { add_claim_by = VKB }
		1091 = { add_claim_by = VKB }
	}
}

country_event = { # VKM claims
	id = uberreichmisc.500
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.500" }
	title = uberreichmisc.500.t
	desc = uberreichmisc.500.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
		214 = { add_claim_by = VKM }
		219 = { add_claim_by = VKM }
		239 = { add_claim_by = VKM }
		247 = { add_claim_by = VKM }
		248 = { add_claim_by = VKM }
		249 = { add_claim_by = VKM }
		250 = { add_claim_by = VKM }
		251 = { add_claim_by = VKM }
		252 = { add_claim_by = VKM }
		253 = { add_claim_by = VKM }
		254 = { add_claim_by = VKM }
		255 = { add_claim_by = VKM }
		256 = { add_claim_by = VKM }
		257 = { add_claim_by = VKM }
		262 = { add_claim_by = VKM }
		264 = { add_claim_by = VKM }
		351 = { add_claim_by = VKM }
		397 = { add_claim_by = VKM }
		398 = { add_claim_by = VKM }
		399 = { add_claim_by = VKM }
		400 = { add_claim_by = VKM }
		401 = { add_claim_by = VKM }
		406 = { add_claim_by = VKM }
		651 = { add_claim_by = VKM }
		652 = { add_claim_by = VKM }
		1193 = { add_claim_by = VKM }
		1194 = { add_claim_by = VKM }
		1197 = { add_claim_by = VKM }
		1198 = { add_claim_by = VKM }
		1199 = { add_claim_by = VKM }
		1203 = { add_claim_by = VKM }
		1204 = { add_claim_by = VKM }
		1205 = { add_claim_by = VKM }
		1208 = { add_claim_by = VKM }
	}
}

country_event = { # HYP claims
	id = uberreichmisc.900
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.900" }
	title = uberreichmisc.900.t
	desc = uberreichmisc.900.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
		38 = { add_claim_by = HYP }
		110 = { add_claim_by = HYP }
		111 = { add_claim_by = HYP }
		124 = { add_claim_by = HYP }
		138 = { add_claim_by = HYP }
		139 = { add_claim_by = HYP }
		140 = { add_claim_by = HYP }
		141 = { add_claim_by = HYP }
		142 = { add_claim_by = HYP }
		143 = { add_claim_by = HYP }
		144 = { add_claim_by = HYP }
		145 = { add_claim_by = HYP }
		146 = { add_claim_by = HYP }
		147 = { add_claim_by = HYP }
		148 = { add_claim_by = HYP }
		149 = { add_claim_by = HYP }
		150 = { add_claim_by = HYP }
		213 = { add_claim_by = HYP }
		215 = { add_claim_by = HYP }
		216 = { add_claim_by = HYP }
		666 = { add_claim_by = HYP }
		722 = { add_claim_by = HYP }
		778 = { add_claim_by = HYP }
		840 = { add_claim_by = HYP }
		844 = { add_claim_by = HYP }
		863 = { add_claim_by = HYP }
		864 = { add_claim_by = HYP }
		865 = { add_claim_by = HYP }
		908 = { add_claim_by = HYP }
		909 = { add_claim_by = HYP }
		936 = { add_claim_by = HYP }
		937 = { add_claim_by = HYP }
		960 = { add_claim_by = HYP }
	}
}


country_event = { # VSJ claims
	id = uberreichmisc.950
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.950" }
	title = uberreichmisc.950.t
	desc = uberreichmisc.950.d
	is_triggered_only = yes
	hidden = yes
	immediate = {
		403 = { add_claim_by = VSJ }
		516 = { add_claim_by = VSJ }
		568 = { add_claim_by = VSJ }
		569 = { add_claim_by = VSJ }
		570 = { add_claim_by = VSJ }
		571 = { add_claim_by = VSJ }
		572 = { add_claim_by = VSJ }
		573 = { add_claim_by = VSJ }
		576 = { add_claim_by = VSJ }
		577 = { add_claim_by = VSJ }
		578 = { add_claim_by = VSJ }
		580 = { add_claim_by = VSJ }
		644 = { add_claim_by = VSJ }
		653 = { add_claim_by = VSJ }
		811 = { add_claim_by = VSJ }
		1200 = { add_claim_by = VSJ }
		1201 = { add_claim_by = VSJ }
		1202 = { add_claim_by = VSJ }
	}
}

country_event = { # VST claims
	id = uberreichmisc.951
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.951" }
	title = uberreichmisc.951.t
	desc = uberreichmisc.951.d
	is_triggered_only = yes
	hidden = yes
	immediate = {		40 = { add_claim_by = VST }
		586 = { add_claim_by = VST }		267 = { add_claim_by = VST }
		287 = { add_claim_by = VST }
		402 = { add_claim_by = VST }
		404 = { add_claim_by = VST }
		405 = { add_claim_by = VST }
		407 = { add_claim_by = VST }
		415 = { add_claim_by = VST }
		416 = { add_claim_by = VST }
		418 = { add_claim_by = VST }
		441 = { add_claim_by = VST }
		442 = { add_claim_by = VST }
		445 = { add_claim_by = VST }
		582 = { add_claim_by = VST }
		583 = { add_claim_by = VST }
		584 = { add_claim_by = VST }
		585 = { add_claim_by = VST }
		587 = { add_claim_by = VST }
		588 = { add_claim_by = VST }
		589 = { add_claim_by = VST }
		590 = { add_claim_by = VST }
		617 = { add_claim_by = VST }
		618 = { add_claim_by = VST }		619 = { add_claim_by = VST }
		654 = { add_claim_by = VST }
		712 = { add_claim_by = VST }
		732 = { add_claim_by = VST }
		804 = { add_claim_by = VST }
		810 = { add_claim_by = VST }
		861 = { add_claim_by = VST }		891 = { add_claim_by = VST }		897 = { add_claim_by = VST }
		1042 = { add_claim_by = VST }
		1083 = { add_claim_by = VST }
		1085 = { add_claim_by = VST }		1209  = { add_claim_by = VST }		1210  = { add_claim_by = VST }		1211  = { add_claim_by = VST }		1212 = { add_claim_by = VST }
	}
}

country_event = { #rehab of generals
	id = uberreichmisc.150
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.150" }
	title = uberreichmisc.150.t
	desc = uberreichmisc.150.d
	is_triggered_only = yes
	
	option = { # 
		name = uberreichmisc.150.a
		create_field_marshal = {
			name = "Heinz Guderian"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Heinz_Guderian_kr.png"
			traits = { trickster brilliant_strategist panzer_leader armor_officer career_officer }
			skill = 4
			attack_skill = 3
			defense_skill = 3
			planning_skill = 4
			logistics_skill = 3
		}
		create_corps_commander = {
			name = "Walter Model"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Walter_Model_kr.png"
			traits = { politically_connected trait_cautious harsh_leader brilliant_strategist trickster }
			skill = 4
			attack_skill = 3
			defense_skill = 5
			planning_skill = 2
			logistics_skill = 3
		}
		create_corps_commander = {
			name = "Werner von Blomberg"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Werner_von_Blomberg.png"
			traits = { trickster armor_officer career_officer }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 2
		}

		create_corps_commander = {
			name = "Günther von Kluge"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Gunther_Kluge_kr.png"
			traits = { career_officer armor_officer }
			skill = 4
			attack_skill = 3
			defense_skill = 3
			planning_skill = 4
			logistics_skill = 3
		}

		create_corps_commander = {
			name = "Erwin von Witzleben"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Erwin_von_Witzleben_kr.png"
			traits = { skilled_staffer career_officer }
			skill = 3
			attack_skill = 2
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 3
		}
		create_corps_commander = {
			name = "Wilhelm Ritter von Leeb"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Wilhelm_Ritter_von_Leeb_kr.png"
			traits = { skilled_staffer infantry_officer }
			skill = 3
			attack_skill = 2
			defense_skill = 3
			planning_skill = 3
			logistics_skill = 2
		
		}
		create_corps_commander = {
			name = "Ewald von Kleist"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Ewald_Kleist_kr.png"
			traits = { skilled_staffer }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 2
		}

		create_corps_commander = {
			name = "Fedor von Bock"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Fedor_Bock_kr.png"
			traits = { brilliant_strategist harsh_leader trait_cautious }
			skill = 3
			attack_skill = 4
			defense_skill = 2
			planning_skill = 2
			logistics_skill = 2
		}

		create_field_marshal = {
			name = "Friedrich Paulus"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Friedrich_Paulus_kr.png"
			traits = { infantry_officer }
			skill = 3
			attack_skill = 2
			defense_skill = 2
			planning_skill = 3
			logistics_skill = 3
		}
		create_corps_commander = {
			name = "Georg von Küchler"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Georg_Kuchler_kr.png"
			traits = { politically_connected career_officer }
			skill = 3
			attack_skill = 3
			defense_skill = 3
			planning_skill = 2
			logistics_skill = 2
		}

		create_corps_commander = {
			name = "Franz Halder"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Franz_Halder_kr.png"
			traits = { organizer }
			skill = 3
			attack_skill = 2
			defense_skill = 2
			planning_skill = 4
			logistics_skill = 2
		}

		create_corps_commander = {
			name = "Gotthard Heinrici"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Gotthard_Heinrici_kr.png"
			traits = { trait_engineer fortress_buster }
			skill = 3
			attack_skill = 4
			defense_skill = 2
			planning_skill = 2
			logistics_skill = 2
		}
		create_corps_commander = {
			name = "Erich von Manstein"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Erich_von_Manstein_kr.png"
			traits = { trickster armor_officer brilliant_strategist trait_engineer }
			skill = 4
			attack_skill = 3
			defense_skill = 3
			planning_skill = 3
			logistics_skill = 4
		}
		create_field_marshal = {
			name = "Gerd von Rundstedt"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Gerd_von_Rundstedt_kr.png"
			traits = { defensive_doctrine offensive_doctrine }
			skill = 4
			attack_skill = 2
			defense_skill = 3
			planning_skill = 4
			logistics_skill = 4
		}

		create_navy_leader = {
			name = "Ludwig von Reuter"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Ludwig_Reuter_kr.png"
			traits = { ironside superior_tactician old_guard_navy }
			skill = 5
			id = 984
			attack_skill = 5
			defense_skill = 4
			maneuvering_skill = 4
			coordination_skill = 5
		}

		create_navy_leader = {
			name = "Wilhelm Souchon"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Wilhelm_Souchon_kr.png"
			traits = { spotter old_guard_navy }
			skill = 3
			attack_skill = 3
			defense_skill = 2
			maneuvering_skill = 3
			coordination_skill = 3
		}

		create_navy_leader = {
			name = "Max Valentiner"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Max_Valentiner_kr.png"
			traits = { seawolf }
			skill = 4
			attack_skill = 4
			defense_skill = 1
			maneuvering_skill = 4
			coordination_skill = 3
		}

		create_navy_leader = {
			name = "Rolf Carls"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Rolf_Carls_kr.png"
			traits = { blockade_runner old_guard_navy }
			skill = 4
			attack_skill = 3
			defense_skill = 4
			maneuvering_skill = 4
			coordination_skill = 3
		}

		create_navy_leader = {
			name = "Günther Lütjens"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Gunther_Lutjens_kr.png"
			traits = { }
			skill = 3
			attack_skill = 3
			defense_skill = 1
			maneuvering_skill = 2
			coordination_skill = 3
		}

		create_navy_leader = {
			name = "Bernhard Rogge"
			portrait_path = "gfx/leaders/GER/Portrait_Germany_Bernhard_Rogge_kr.png"
			traits = { seawolf }
			skill = 1
			attack_skill = 2
			defense_skill = 1
			maneuvering_skill = 2
			coordination_skill = 1
		}
	}
}

country_event = { # allignment to internationale SMEPD
	id = uberreichmisc.800
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.800" }
	title = uberreichmisc.800.t
	desc = uberreichmisc.800.d
	is_triggered_only = yes
	
	option = { # join internationale
		name = uberreichmisc.800.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
		INT = { add_to_faction = ROOT }
	}
	option = { # we good
		name = uberreichmisc.800.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
	}
}

country_event = { # allignment to internationale SMEPD
	id = uberreichmisc.801
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.801" }
	title = uberreichmisc.801.t
	desc = uberreichmisc.801.d
	is_triggered_only = yes
	
	option = { # join internationale
		name = uberreichmisc.801.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
		UBR = { add_to_faction = ROOT }
	}
	option = { # we good
		name = uberreichmisc.801.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 100
				has_opinion = {
					target = UBR
					value < 0
				}
			}
			modifier = {
				factor = 0
				has_opinion = {
					target = UBR
					value > 60
				}
			}
		}
	}
}

country_event = { # Join Russian fourth Internationale
	id = uberreichmisc.802
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.802" }
	title = uberreichmisc.802.t
	desc = uberreichmisc.802.d
	is_triggered_only = yes
	
	option = { # yes
		name = uberreichmisc.802.a
		ai_chance = { factor = 60 }
		RUS = { add_to_faction = ROOT }
	}
	option = { # bruh, larp
		name = uberreichmisc.802.b
		ai_chance = {
			factor = 40
			modifier = {
				factor = 0
				OR = {
					has_country_flag = bolsheviks_victorous
					has_country_flag = zhukov_invites_bolsheviks
				}
			}
		}
		GER = { country_event = uberreichmisc.803 }
	}
}

country_event = { # Join Russian fourth Internationale FAIL
	id = uberreichmisc.803
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.803" }
	title = uberreichmisc.803.t
	desc = uberreichmisc.803.d
	is_triggered_only = yes
	
	option = { # bruh moment
		name = uberreichmisc.803.a
		create_faction = "Fifth Internationale"
		add_popularity = { ideology = totalist popularity = 0.40 }
		add_war_support = 1
		unlock_decision_tooltip = UBR_own_invite_countries_decision_fake
	}
}

country_event = { 
	id = uberreichmisc.810
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.810" }
	title = uberreichmisc.810.t
	desc = uberreichmisc.810.d
	is_triggered_only = yes
	option = {
		name = uberreichmisc.810.a
		add_stability = -0.10
	}
}

country_event = { # anarcho_communes
	id = uberreichmisc.850
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.850" }
	title = uberreichmisc.850.t
	desc = uberreichmisc.850.d
	is_triggered_only = yes
	hidden = yes
	trigger = {
		is_subject_of = UBR
		NOT = { has_country_flag = UBR_ANARCHIST_WORLD_COUNTRY }
		UBR = { has_country_flag = UBR_ANARCHIST_WORLD }
	}
	immediate = {
		ROOT = {
			create_country_leader = {
				name = "Communal Councils"
				desc = "UBR_Councils_DESC"
				picture = "gfx/leaders/UBR/councilism.png"
				expire = "1965.1.1"
				ideology = anarcho_syndicalist_subtype
			}
			set_cosmetic_tag = UBR_ANARCHISM_PUPPET
			set_party_name = {
				ideology = syndicalist
				long_name = ANARCHIST_GERMANS_long
				name = ANARCHIST_GERMANS
			}
			add_ideas = FAUD_SOCIETY_THREE
			load_focus_tree = { tree = generic_focus }
			set_country_flag = UBR_ANARCHIST_WORLD_COUNTRY
		}
		UBR = {
			puppet = ROOT
			set_autonomy = {
				target = ROOT
				autonomy_state = RM_ANARCHOCOMMUNE
			}
		}
	}
}



country_event = { # Future of Germany MarLibs
	id = uberreichmisc.860
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.860" }
	title = uberreichmisc.860.t
	desc = uberreichmisc.860.d
	is_triggered_only = yes
	
	option = { #stay republic
		name = uberreichmisc.860.a
		ai_chance = {
			factor = 55
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = UBR_congress
						option = UBR_CONGRESS_KRUPP
					}
					has_game_rule = {
						rule = UBR_congress
						option = UBR_CONGRESS_DLP_OLIGARCHY
					}
				}
			}
		}
		swap_ideas = {
			remove_idea = UBR_SUCCDUM
			add_idea = UBR_MARLIB_STATE
		}
	}
	
	option = { # Oligarchy
		name = uberreichmisc.860.b
		ai_chance = {
			factor = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = UBR_congress
						option = UBR_CONGRESS_KRUPP
					}
					has_game_rule = {
						rule = UBR_congress
						option = UBR_CONGRESS_DLP
					}
				}
			}
		}
		set_cosmetic_tag = UBR_REP_KRUPP
		swap_ideas = {
			remove_idea = UBR_SUCCDUM
			add_idea = UBR_OLIGARCHY
		}
		hidden_effect = {
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = UBR_MARLIB_PARTY_long
			name = UBR_MARLIB_PARTY
		}
		create_country_leader = {
			name = "Gustav Krupp"
			desc = "UBR_Krupp_DESC"
			picture = "gfx/leaders/UBR/Portrait_UBR_Gustav_Krupp.png"
			expire = "1965.1.1"
			ideology = oligarchy_subtype
		}
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = 0.35
		}
		set_politics = {
			ruling_party = authoritarian_democrat
			last_election = "1936.11.16"
			elections_allowed = no
		}
		remove_all_ministers = yes
			add_ideas = {
				UBR_Alfried_Krupp_hog_sco
				UBR_Ludwig_Kaas_for_ade
				MAF_Fritz_Thyssen_eco_pau
				UBR_Otto_Bradfisch_sec_ade
			}
		}
	}
	
	option = { #DUDDUDHUDHDHUDU BAABBDBBUH BHUHUHUB BUH BU BU BUH BASED?
		name = uberreichmisc.860.c
		ai_chance = {
			factor = 15
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = UBR_congress
						option = UBR_CONGRESS_DLP
					}
					has_game_rule = {
						rule = UBR_congress
						option = UBR_CONGRESS_DLP_OLIGARCHY
					}
				}
			}
		}
		set_cosmetic_tag = UBR_CORPORATE_DICTATORSHIP
		remove_ideas = UBR_SPD_FAUD_FREIHEIT
		swap_ideas = {
			remove_idea = UBR_SUCCDUM
			add_idea = UBR_CORPORATE_DICTATORSHIP_IDEA
		}
		hidden_effect = {
			set_country_flag = UBR_CORPORATE_DICTATORSHIP_FLAG
			set_party_name = {
				ideology = paternal_autocrat
				long_name = UBR_INDUSTRIALS_long
				name = UBR_INDUSTRIALS
			}
			create_country_leader = {
				name = "Gustav Krupp"
				desc = "UBR_Krupp_DESC"
				picture = "gfx/leaders/UBR/Portrait_UBR_Gustav_Krupp.png"
				expire = "1965.1.1"
				ideology = corporatocracy_subtype
			}
			set_party_name = {
				ideology = authoritarian_democrat
				long_name = UBR_INDUSTRIALS_long
				name = UBR_INDUSTRIALS
			}
			create_country_leader = {
				name = "Gustav Krupp"
				desc = "UBR_Krupp_DESC"
				picture = "gfx/leaders/UBR/Portrait_UBR_Gustav_Krupp.png"
				expire = "1965.1.1"
				ideology = oligarchy_subtype
			}
			set_party_name = {
				ideology = market_liberal
				long_name = UBR_INDUSTRIALS_long
				name = UBR_INDUSTRIALS
			}
			add_popularity = {
				ideology = paternal_autocrat
				popularity = 0.35
			}
			set_politics = {
				ruling_party = paternal_autocrat
				last_election = "1936.11.16"
				elections_allowed = no
			}
			complete_national_focus = UBR_CORPORATE_DICTATORSHIP
			remove_all_ministers = yes
			add_ideas = {
				UBR_Alfried_Krupp_hog_sco
				UBR_Ludwig_Kaas_for_ade
				MAF_Fritz_Thyssen_eco_pau
				UBR_Otto_Bradfisch_sec_ade
			}
		}
	}
}

country_event = { # restore the monarchy?
	id = uberreichmisc.1000
	immediate = { log = "[GetDateText]: [Root.GetName]: event uberreichmisc.1000" }
	title = uberreichmisc.1000.t
	desc = uberreichmisc.1000.d
	is_triggered_only = yes
	
	option = { #DUHHH BASED?, BU-BUH- BASED?
		ai_chance = {
			factor = 45
			modifier = {
				factor = 0
				has_game_rule = {
					rule = UBR_congress
					option = UBR_CONGRESS_CDU_REPUBLIC
				}
			}
		}
		name = uberreichmisc.1000.a
		hidden_effect = {
			country_event = {
				id = uberreichmisc.1001
				days = 7
			}
		}
	}
	
	option = { #No
		name = uberreichmisc.1000.b
		ai_chance = {
			factor = 55
			modifier = {
				factor = 0
				has_game_rule = {
					rule = UBR_congress
					option = UBR_CONGRESS_CDU_MONARCHY
				}
			}
		}
		add_political_power = 75
	}
}

country_event = { # pick-a-kaiser
	id = uberreichmisc.1001
	immediate = {
		log = "[GetDateText]: [Root.GetName]: event uberreichmisc.1001"
		hidden_effect = { set_cosmetic_tag = UBR_CON_MONARCHIST }
	}
	title = uberreichmisc.1001.t
	desc = uberreichmisc.1001.d
	is_triggered_only = yes
	
	option = { #Auwi 
		name = uberreichmisc.1001.a
		ai_chance = { factor = 25 }
		hidden_effect = {
			create_country_leader = {
				name = "August Wilhelm I"
				picture = "gfx/leaders/COS/Portrait_COS_August_Wilhelm.png"
				expire = "1965.1.1"
				ideology = christian_democracy_subtype
			}
			create_country_leader = {
				name = "August Wilhelm I"
				picture = "gfx/leaders/COS/Portrait_COS_August_Wilhelm.png"
				expire = "1965.1.1"
				ideology = socdem_democratic_socialism_subtype
			}
			create_country_leader = {
				name = "August Wilhelm I"
				picture = "gfx/leaders/COS/Portrait_COS_August_Wilhelm.png"
				expire = "1965.1.1"
				ideology = centrist_subtype
			}
			create_country_leader = {
				name = "August Wilhelm I"
				picture = "gfx/leaders/COS/Portrait_COS_August_Wilhelm.png"
				expire = "1965.1.1"
				ideology = ancap_subtype
			}
			create_country_leader = {
				name = "August Wilhelm I"
				picture = "gfx/leaders/COS/Portrait_COS_August_Wilhelm.png"
				expire = "1965.1.1"
				ideology = prussian_constitutionalism_subtype
			}
			create_country_leader = {
				name = "August Wilhelm I"
				picture = "gfx/leaders/COS/Portrait_COS_August_Wilhelm.png"
				expire = "1965.1.1"
				ideology = absolute_monarchy_subtype
			}
			create_country_leader = {
				name = "August Wilhelm I"
				picture = "gfx/leaders/COS/Portrait_COS_August_Wilhelm.png"
				expire = "1965.1.1"
				ideology = militarism_subtype
			}
		}
	}
	
	option = { #Victoria 
		name = uberreichmisc.1001.b
		ai_chance = { factor = 15 }
		hidden_effect = {
			create_country_leader = {
				name = "Victoria Louise I"
				picture = "gfx/leaders/FRP/VictoriaLouiseMarLib.png"
				expire = "1965.1.1"
				ideology = christian_democracy_subtype
			}
			create_country_leader = {
				name = "Victoria Louise I"
				picture = "gfx/leaders/FRP/VictoriaLouiseMarLib.png"
				expire = "1965.1.1"
				ideology = socdem_democratic_socialism_subtype
			}
			create_country_leader = {
				name = "Victoria Louise I"
				picture = "gfx/leaders/FRP/VictoriaLouiseMarLib.png"
				expire = "1965.1.1"
				ideology = centrist_subtype
			}
			create_country_leader = {
				name = "Victoria Louise I"
				picture = "gfx/leaders/FRP/VictoriaLouiseMarLib.png"
				expire = "1965.1.1"
				ideology = ancap_subtype
			}
			create_country_leader = {
				name = "Victoria Louise I"
				picture = "gfx/leaders/FRP/VictoriaLouiseMarLib.png"
				expire = "1965.1.1"
				ideology = prussian_constitutionalism_subtype
			}
			create_country_leader = {
				name = "Victoria Louise I"
				picture = "gfx/leaders/FRP/VictoriaLouiseMarLib.png"
				expire = "1965.1.1"
				ideology = absolute_monarchy_subtype
			}
			create_country_leader = {
				name = "Victoria Louise I"
				picture = "gfx/leaders/FRP/VictoriaLouiseMarLib.png"
				expire = "1965.1.1"
				ideology = militarism_subtype
			}
		}
	}

	option = { #Rupprecht 
		name = uberreichmisc.1001.c
		ai_chance = { factor = 15 }
		hidden_effect = {
			create_country_leader = {
				name = "Rupprecht I"
				picture = "gfx/leaders/GER/Portrait_UBR_Rupprecht_Bayern_kr.png"
				expire = "1965.1.1"
				ideology = christian_democracy_subtype
			}
			create_country_leader = {
				name = "Rupprecht I"
				picture = "gfx/leaders/GER/Portrait_UBR_Rupprecht_Bayern_kr.png"
				expire = "1965.1.1"
				ideology = socdem_democratic_socialism_subtype
			}
			create_country_leader = {
				name = "Rupprecht I"
				picture = "gfx/leaders/GER/Portrait_UBR_Rupprecht_Bayern_kr.png"
				expire = "1965.1.1"
				ideology = centrist_subtype
			}
			create_country_leader = {
				name = "Rupprecht I"
				picture = "gfx/leaders/GER/Portrait_UBR_Rupprecht_Bayern_kr.png"
				expire = "1965.1.1"
				ideology = ancap_subtype
			}
			create_country_leader = {
				name = "Rupprecht I"
				picture = "gfx/leaders/GER/Portrait_UBR_Rupprecht_Bayern_kr.png"
				expire = "1965.1.1"
				ideology = prussian_constitutionalism_subtype
			}
			create_country_leader = {
				name = "Rupprecht I"
				picture = "gfx/leaders/GER/Portrait_UBR_Rupprecht_Bayern_kr.png"
				expire = "1965.1.1"
				ideology = absolute_monarchy_subtype
			}
			create_country_leader = {
				name = "Rupprecht I"
				picture = "gfx/leaders/GER/Portrait_UBR_Rupprecht_Bayern_kr.png"
				expire = "1965.1.1"
				ideology = militarism_subtype
			}
		}
	}

	option = { #Louis Ferdinand
		name = uberreichmisc.1001.e
		ai_chance = { factor = 20 }
		hidden_effect = {
			create_country_leader = {
				name = "Louis Ferdinand I"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1965.1.1"
				ideology = christian_democracy_subtype
			}
			create_country_leader = {
				name = "Louis Ferdinand I"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1965.1.1"
				ideology = socdem_democratic_socialism_subtype
			}
			create_country_leader = {
				name = "Louis Ferdinand I"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1965.1.1"
				ideology = centrist_subtype
			}
			create_country_leader = {
				name = "Louis Ferdinand I"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1965.1.1"
				ideology = ancap_subtype
			}
			create_country_leader = {
				name = "Louis Ferdinand I"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1965.1.1"
				ideology = prussian_constitutionalism_subtype
			}
			create_country_leader = {
				name = "Louis Ferdinand I"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1965.1.1"
				ideology = absolute_monarchy_subtype
			}
			create_country_leader = {
				name = "Louis Ferdinand I"
				picture = "gfx/leaders/RUS/Portrait_RUS_Louis_Ferdinand.png"
				expire = "1965.1.1"
				ideology = militarism_subtype
			}
		}
	}

	option = { #Friedrich Wilhelm
		name = uberreichmisc.1001.f
		ai_chance = { factor = 25 }
		hidden_effect = {
			create_country_leader = {
				name = "Friedrich Wilhelm I"
				picture = "gfx/leaders/GER/Portrait_GER_Friedrich_Wilhelm.png"
				expire = "1965.1.1"
				ideology = christian_democracy_subtype
			}
			create_country_leader = {
				name = "Friedrich Wilhelm I"
				picture = "gfx/leaders/GER/Portrait_GER_Friedrich_Wilhelm.png"
				expire = "1965.1.1"
				ideology = socdem_democratic_socialism_subtype
			}
			create_country_leader = {
				name = "Friedrich Wilhelm I"
				picture = "gfx/leaders/GER/Portrait_GER_Friedrich_Wilhelm.png"
				expire = "1965.1.1"
				ideology = centrist_subtype
			}
			create_country_leader = {
				name = "Friedrich Wilhelm I"
				picture = "gfx/leaders/GER/Portrait_GER_Friedrich_Wilhelm.png"
				expire = "1965.1.1"
				ideology = ancap_subtype
			}
			create_country_leader = {
				name = "Friedrich Wilhelm I"
				picture = "gfx/leaders/GER/Portrait_GER_Friedrich_Wilhelm.png"
				expire = "1965.1.1"
				ideology = prussian_constitutionalism_subtype
			}
			create_country_leader = {
				name = "Friedrich Wilhelm I"
				picture = "gfx/leaders/GER/Portrait_GER_Friedrich_Wilhelm.png"
				expire = "1965.1.1"
				ideology = absolute_monarchy_subtype
			}
			create_country_leader = {
				name = "Friedrich Wilhelm I"
				picture = "gfx/leaders/GER/Portrait_GER_Friedrich_Wilhelm.png"
				expire = "1965.1.1"
				ideology = militarism_subtype
			}
		}
	}
}





}